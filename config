# Sample rawdog config file. Copy this into your ~/.rawdog/ directory, and edit
# it to suit your preferences.
# All paths in this file should be either absolute, or relative to your .rawdog
# directory.

# The maximum number of articles to show on the generated page.
# Set this to 0 for no limit.
maxarticles 200

# The maximum age in minutes of articles to show on the generated page.
# Set this to 0 for no limit.
maxage 0

# The format to write day headings in. (See "man strftime" if you want to
# change this.)
dayformat %A, %d %B

# The format to write time headings in. Use "%I:%M %p" if you prefer
# a 12-hour clock.
timeformat %H:%M

# The template file to use, or "default" to use the built-in template
# (which is probably sufficient for most users). Use "rawdog -t" to show
# the template currently in use as a starting-point for customisation.
# The following strings will be replaced in the output:
# __version__         The rawdog version in use
# __refresh__         The HTML 4 <meta http-equiv="refresh" ...> header
# __items__           The aggregated items
# __feeds__           The listing of feeds
template default

# Similarly, the template used for each item shown. Use "rawdog -T" to show the
# template currently in use as a starting-point for customisation. The
# following strings will be replaced in the output:
# __title__           The item title (as an HTML link, if possible)
# __title_no_link__   The item title (as text)
# __description__     The item's descriptive text, or the empty string
#                     if it doesn't have a description
# __date__            The item's date as provided by the feed
# __added__           The date the article was received by rawdog
# __hash__            A hash of the article (useful for summary pages)
# __feed_title__      The feed title (as an HTML link, if possible)
# __feed_title_no_link__
#                     The feed title (as text)
# __feed_url__        The feed URL
# __feed_hash__       A hash of the feed URL (useful for per-feed styles)
# Simple conditional expansion is possible by saying something like
# "__if_items__ hello __endif__"; the text between the if and endif will
# only be included if __items__ would expand to something other than
# the empty string. Ifs cannot be nested. (This also works for the
# "template" option, but it's only really useful for item templates.)
itemtemplate default

# Where to write the output HTML to. You should place style.css in the same
# directory. Specify this as "-" to write the HTML to stdout.
outputfile /home/azz/public_html/rawdog.html

# Whether to use (1) or not use (0) a <meta http-equiv="Refresh" ...> tag
# in the generated HTML to indicate that the page should be refreshed
# automatically. If this is turned on, then the page will refresh every N
# minutes, where N is the shortest feed period value specified below.
# (This works by controlling whether the default template includes
# __refresh__; if you use a custom template, __refresh__ is always
# available.)
userefresh 1

# Whether to show the list of active feeds in the generated HTML.
# (This works by controlling whether the default template includes
# __feeds__; if you use a custom template, __feeds__ is always
# available.)
showfeeds 1

# The time in seconds that rawdog will wait before considering a feed
# unreachable when trying to connect. If you're getting lots of timeout
# errors and are on a slow connection, increase this.
timeout 30

# Whether to display (1) or not display (0) verbose status messages
# saying what rawdog's doing while it runs. Specifying -v or --verbose
# on the command line is equivalent to saying "verbose 1" here.
verbose 0

# The feeds you want to watch, in the format "feed period url [args]".
# The period is the minimum time in minutes between updates; if less
# than period minutes have passed, "rawdog update" will skip that feed.
# Specifying a period less than 30 minutes is considered to be bad manners; it
# is suggested that you make the period as long as possible.
# Arguments are optional, and are of the form "key=value", seperated by spaces;
# possible arguments are:
# user                User for HTTP basic authentication
# password            Password for HTTP basic authentication
# format              "text" to indicate that the descriptions in this feed
#                     are unescaped plain text (rather than the usual HTML),
#                     and should be escaped and wrapped in a <pre> element
# You can specify as many feeds as you like.
feed 60 http://www.advogato.org/rss/articles.xml
feed 30 http://news.bbc.co.uk/rss/newsonline_uk_edition/front_page/rss091.xml
feed 180 http://diveintomark.org/xml/rss.xml
feed 180 http://secretfeed.example.com/secret.rss user=bob password=secret
feed 180 http://brokenfeeds.com/my.rss format=text

